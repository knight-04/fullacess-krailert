const PurchaseOrderForm = () => {
    const [data, setData] = useState({
      poNumber: '',
      date: '',
      project: '',
      supplier: '',
      items: [{ id: 1, name: '', quantity: '', unit: '', unitPrice: '', total: '' }],
       // Add signature-related state
       controllerSignature: '',
       controllerDate: '',
       purchaserSignature: '',
       purchaserDate: '',
       inspectorSignature: '',
       inspectorDate: '',
      loading: true,
      error: null
    });
  
    useEffect(() => {
      fetchData();
    }, []);
  
    const fetchData = async () => {
      try {
        // Simulated API call - replace with your actual API endpoint
        const response = await fetch('/api/purchase-orders');
        const result = await response.json();
        setData({
          ...result,
          loading: false
        });
      } catch (error) {
        setData(prev => ({
          ...prev,
          error: 'ไม่สามารถโหลดข้อมูลได้',
          loading: false
        }));
      }
    };
  
    const handleAddItem = () => {
      setData(prev => ({
        ...prev,
        items: [...prev.items, {
          id: prev.items.length + 1,
          name: '',
          quantity: '',
          unit: '',
          unitPrice: '',
          total: ''
        }]
      }));
    };
  
    const handleRemoveItem = (index) => {
      setData(prev => ({
        ...prev,
        items: prev.items.filter((_, i) => i !== index)
      }));
    };
  
    const handleItemChange = (index, field, value) => {
      setData(prev => {
        const newItems = [...prev.items];
        newItems[index] = {
          ...newItems[index],
          [field]: value
        };
        
        // Calculate total if quantity and unitPrice are numbers
        if (field === 'quantity' || field === 'unitPrice') {
          const quantity = parseFloat(field === 'quantity' ? value : newItems[index].quantity) || 0;
          const unitPrice = parseFloat(field === 'unitPrice' ? value : newItems[index].unitPrice) || 0;
          newItems[index].total = (quantity * unitPrice).toFixed(2);
        }
        
        return {
          ...prev,
          items: newItems
        };
      });
    };
  
    if (data.loading) {
      return (
        <div className="flex items-center justify-center min-h-screen">
          <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-gray-900" />
        </div>
      );
    }
  
    const calculateSubTotal = () => {
      return data.items.reduce((sum, item) => sum + (parseFloat(item.total) || 0), 0);
    };
  
    const calculateVat = () => {
      return calculateSubTotal() * 0.07;
    };
  
    const calculateTotal = () => {
      return calculateSubTotal() + calculateVat();
    };
  
    const handleFileUpload = (signatureType) => (event) => {
      const file = event.target.files?.[0];
      if (file) {
        const reader = new FileReader();
        reader.onloadend = () => {
          setData(prev => ({
            ...prev,
            [signatureType]: reader.result
          }));
        };
        reader.readAsDataURL(file);
      }
    };
  
  
    return (
      <div className="max-w-5xl mx-auto bg-white shadow-lg rounded-lg p-6">
        {/* Header */}
        <div className="flex justify-between items-start mb-3">
          <div className="flex items-center gap-4">
            <div className="w-32 h-32 rounded flex items-center justify-center">
              <span><img src='/images/Logo/Real/626.jpg' alt="Company Logo" /></span>
            </div>
            <div>
              <h1 className="text-xl font-semibold mb-3">บริษัท ไกรเลิศ แลนด์ จำกัด</h1>
              <p className="text-sm text-gray-600">7/10 ถนนสรุปราชัย แขวงดังบูรพา เขตบานนา</p>
              <p className="text-sm text-gray-600">กรุงเทพมหานคร 10120</p>
              <p className="text-sm text-gray-600">เลขประจำตัวผู้เสียภาษี 0105564136941</p>
            </div>
          </div>
  
          {/* Document Type Checkboxes */}
          <div className="space-y-2">
            <div className="flex items-center gap-2">
              <input type="checkbox" id="contract" className="rounded" />
              <label htmlFor="contract" className="text-sm">1. งานในสัญญา</label>
            </div>
            <div className="flex items-center gap-2">
              <input type="checkbox" id="inspection" className="rounded" />
              <label htmlFor="inspection" className="text-sm">2. งานตรวจก่อนโอน</label>
            </div>
            <div className="flex items-center gap-2">
              <input type="checkbox" id="transfer" className="rounded" />
              <label htmlFor="transfer" className="text-sm">3. งานโอนแล้วรอส่งมอบ</label>
            </div>
            <div className="flex items-center gap-2">
              <input type="checkbox" id="additionalWork" className="rounded" />
              <label htmlFor="additionalWork" className="text-sm">4. งานต่อเดิม</label>
            </div>
            <div className="flex items-center gap-2">
              <input type="checkbox" id="warranty" className="rounded" />
              <label htmlFor="warranty" className="text-sm">5. งานแจ้งซ่อมในประกัน</label>
            </div>
            <div className="flex items-center gap-2">
              <input type="checkbox" id="service" className="rounded" />
              <label htmlFor="service" className="text-sm">6. งานขายและการบริการ</label>
            </div>
          </div>
        </div>
  
        {/* Title */}
        <div className="text-center mb-6">
          <h2 className="text-xl font-semibold">ใบสั่งซื้อ (Purchase Order)</h2>
        </div>
  
        {/* PO Details */}
        <div className="grid grid-cols-2 gap-6 mb-6">
          <div className="border rounded p-4">
            <div className="space-y-4">
              <div>
                <label className="text-sm text-gray-600">ชื่อบริษัท</label>
                <input type="text" className="w-full border rounded p-2" />
              </div>
              <div>
                <label className="text-sm text-gray-600">ที่อยู่</label>
                <input type="text" className="w-full border rounded p-2" />
              </div>
              <div className="grid grid-cols-2 gap-4">
                <div>
                  <label className="text-sm text-gray-600">ติดต่อ</label>
                  <input type="text" className="w-full border rounded p-2" />
                </div>
                <div>
                  <label className="text-sm text-gray-600">โทร.</label>
                  <input type="text" className="w-full border rounded p-2" />
                </div>
              </div>
            </div>
          </div>
  
          <div className="border rounded p-4">
            <div className="grid grid-cols-2 gap-4">
              <div>
                <label className="text-sm text-gray-600">วันที่</label>
                <input type="date" className="w-full border rounded p-2" />
              </div>
              <div>
                <label className="text-sm text-gray-600">เลขที่ PO</label>
                <input type="text" className="w-full border rounded p-2" />
              </div>
              <div>
                <label className="text-sm text-gray-600">โครงการ</label>
                <select className="w-full border rounded p-2">
                  <option value="">เลือกโครงการ</option>
                </select>
              </div>
              <div>
                <label className="text-sm text-gray-600">แปลนบ้าน</label>
                <select className="w-full border rounded p-2">
                  <option value="">เลือกแบบบ้าน</option>
                </select>
              </div>
              <div>
                <label className="text-sm text-gray-600">วันกำหนดส่ง</label>
                <input type="date" className="w-full border rounded p-2" />
              </div>
              <div>
                <label className="text-sm text-gray-600">ติดต่อ</label>
                <input type="text" className="w-full border rounded p-2" />
              </div>
            </div>
          </div>
        </div>
  
        {/* Items Table */}
        <div className="overflow-x-auto mb-6">
          <table className="w-full border-collapse border">
            <thead>
              <tr className="bg-gray-50">
                <th className="border p-2 text-sm w-16">ลำดับ</th>
                <th className="border p-2 text-sm">รายการสินค้า</th>
                <th className="border p-2 text-sm w-24">จำนวน</th>
                <th className="border p-2 text-sm w-24">หน่วย</th>
                <th className="border p-2 text-sm w-32">ราคา/หน่วย</th>
                <th className="border p-2 text-sm w-32">จำนวนเงิน</th>
                <th className="border p-2 text-sm w-16">จัดการ</th>
              </tr>
            </thead>
            <tbody>
              {data.items.map((item, index) => (
                <tr key={item.id}>
                  <td className="border p-2 text-center">{index + 1}</td>
                  <td className="border p-2">
                    <input
                      type="text"
                      className="w-full p-1 border rounded"
                      value={item.name}
                      onChange={(e) => handleItemChange(index, 'name', e.target.value)}
                    />
                  </td>
                  <td className="border p-2">
                    <input
                      type="number"
                      className="w-full p-1 border rounded text-right"
                      value={item.quantity}
                      onChange={(e) => handleItemChange(index, 'quantity', e.target.value)}
                    />
                  </td>
                  <td className="border p-2">
                    <input
                      type="text"
                      className="w-full p-1 border rounded text-center"
                      value={item.unit}
                      onChange={(e) => handleItemChange(index, 'unit', e.target.value)}
                    />
                  </td>
                  <td className="border p-2">
                    <input
                      type="number"
                      className="w-full p-1 border rounded text-right"
                      value={item.unitPrice}
                      onChange={(e) => handleItemChange(index, 'unitPrice', e.target.value)}
                    />
                  </td>
                  <td className="border p-2">
                    <input
                      type="text"
                      className="w-full p-1 border rounded text-right"
                      value={item.total}
                      readOnly
                    />
                  </td>
                  <td className="border p-2 text-center">
                    {data.items.length > 1 && (
                      <button
                        onClick={() => handleRemoveItem(index)}
                        className="text-red-600 hover:text-red-800"
                      >
                        <Trash2 size={16} />
                      </button>
                    )}
                  </td>
                </tr>
              ))}
            </tbody>
            <tfoot>
              <tr>
                <td colSpan="7" className="border p-2">
                  <button
                    onClick={handleAddItem}
                    className="flex items-center gap-2 px-4 py-2 text-sm font-medium text-blue-600 hover:text-blue-800"
                  >
                    <Plus size={16} />
                    เพิ่มรายการ
                  </button>
                </td>
              </tr>
              <tr>
                <td colSpan="4" rowSpan="3" className="border p-2">
                  <textarea
                    className="w-full p-2 border rounded"
                    placeholder="หมายเหตุ"
                    rows="3"
                  />
                </td>
                <td className="border p-2 text-right font-semibold text-sm">รวมเงิน</td>
                <td className="border p-2 text-right">
                  {calculateSubTotal().toFixed(2)}
                </td>
                <td className="border"></td>
              </tr>
              <tr>
                <td className="border p-2 text-right font-semibold text-sm">VAT 7%</td>
                <td className="border p-2 text-right">
                  {calculateVat().toFixed(2)}
                </td>
                <td className="border"></td>
              </tr>
              <tr>
                <td className="border p-2 text-right font-semibold text-sm">รวมเป็นเงินทั้งสิ้น</td>
                <td className="border p-2 text-right">
                  {calculateTotal().toFixed(2)}
                </td>
                <td className="border"></td>
              </tr>
            </tfoot>
          </table>
        </div>
  
         {/* Signatures section */}
              <div className="grid grid-cols-3 gap-4">
          {/* Controller Signature */}
          <div className="text-center">
            <div className="relative border-b pb-16 mb-2 group">
              {data.controllerSignature ? (
                <img 
                  src={data.controllerSignature} 
                  alt="Controller Signature"
                  className="absolute bottom-0 left-1/2 -translate-x-1/2 h-16 object-contain"
                />
              ) : (
                <button 
                  onClick={() => document.getElementById('controllerSignature').click()}
                  className="absolute bottom-0 left-1/2 -translate-x-1/2 w-32 h-16 flex items-center justify-center text-xs text-blue-600 border border-dashed border-blue-300 rounded hover:bg-blue-50"
                >
                  คลิกเพื่ออัพโหลด
                </button>
              )}
              <input
                type="file"
                accept="image/*"
                onChange={handleFileUpload('controllerSignature')}
                className="hidden"
                id="controllerSignature"
              />
            </div>
            <label className="block text-sm mb-2">
              <span className="text-gray-600">ผู้ควบคุมงาน</span>
            </label>
            <input 
              type="date"
              className="text-sm text-gray-600 border rounded px-2 py-1"
              value={data.controllerDate}
              onChange={(e) => setData(prev => ({ ...prev, controllerDate: e.target.value }))}
            />
          </div>
  
          {/* Purchaser Signature */}
          <div className="text-center">
            <div className="relative border-b pb-16 mb-2 group">
              {data.purchaserSignature ? (
              <div>
                <img 
                  src={data.purchaserSignature} 
                  alt="Purchaser Signature"
                  className="absolute bottom-0 left-1/2 -translate-x-1/2 h-16 object-contain"
                />
                 <button
                    onClick={() => setData(prev => ({ ...prev, purchaserSignature: '' }))}
                    className="absolute bottom-0 right-0 p-1 text-red-500 bg-white rounded-full shadow hover:bg-red-50 opacity-0 group-hover:opacity-100 transition-opacity"
                    title="ลบลายเซ็น"
                  >
                   <X/>
                  </button>
                  </div>
              ) : (
                <button 
                  onClick={() => document.getElementById('purchaserSignature').click()}
                  className="absolute bottom-0 left-1/2 -translate-x-1/2 w-32 h-16 flex items-center justify-center text-xs text-blue-600 border border-dashed border-blue-300 rounded hover:bg-blue-50"
                >
                  คลิกเพื่ออัพโหลด
                </button>
              )}
              <input
                type="file"
                accept="image/*"
                onChange={handleFileUpload('purchaserSignature')}
                className="hidden"
                id="purchaserSignature"
              />
            </div>
            <label className="block text-sm mb-2">
              <span className="text-gray-600">ผู้สั่งซื้อ / สั่งซ่อม</span>
            </label>
            <input 
              type="date"
              className="text-sm text-gray-600 border rounded px-2 py-1"
              value={data.purchaserDate}
              onChange={(e) => setData(prev => ({ ...prev, purchaserDate: e.target.value }))}
            />
          </div>
  
          {/* Inspector Signature */}
          <div className="text-center">
            <div className="relative border-b pb-16 mb-2 group">
              {data.inspectorSignature ? (
                <img 
                  src={data.inspectorSignature} 
                  alt="Inspector Signature"
                  className="absolute bottom-0 left-1/2 -translate-x-1/2 h-16 object-contain"
                />
              ) : (
                <button 
                  onClick={() => document.getElementById('inspectorSignature').click()}
                  className="absolute bottom-0 left-1/2 -translate-x-1/2 w-32 h-16 flex items-center justify-center text-xs text-blue-600 border border-dashed border-blue-300 rounded hover:bg-blue-50"
                >
                  คลิกเพื่ออัพโหลด
                </button>
              )}
              <input
                type="file"
                accept="image/*"
                onChange={handleFileUpload('inspectorSignature')}
                className="hidden"
                id="inspectorSignature"
              />
            </div>
            <label className="block text-sm mb-2">
              <span className="text-gray-600">ผู้ตรวจสอบ (Site N)</span>
            </label>
            <input 
              type="date"
              className="text-sm text-gray-600 border rounded px-2 py-1"
              value={data.inspectorDate}
              onChange={(e) => setData(prev => ({ ...prev, inspectorDate: e.target.value }))}
            />
          </div>
        </div>
  
      </div>
    );
  };
  
  export default PurchaseOrderForm;